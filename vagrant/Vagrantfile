# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "ubuntu14.04"
  config.vm.box_url = "https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box"
  config.vm.provider "virtualbox" do |vb|
    vb.memory = 1024
    vb.cpus = 2
  end

  #config.ssh.username = 'root'
  #config.ssh.password = 'vagrant'
  #config.ssh.insert_key = 'true'

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network :forwarded_port, guest: 80, host: 8080
  # config.vm.network :private_network, ip: "192.168.33.10"
  # config.vm.network "private_network", ip: "10.10.10.10"

  ###################################################################
  # Next lines fixing error with github private repo authentication #
  # and used in git_sync recipe 								    #
  ###################################################################
  config.vm.provision "file", source: "~/.ssh/id_rsa", destination: "/home/vagrant/id_rsa"
  config.vm.provision "shell" do |sh|
    sh.inline = "#!/bin/bash 
    			mv /home/vagrant/id_rsa /root/.ssh/id_rsa 
    			echo 'Host *\nStrictHostKeyChecking no' > /root/.ssh/config 
    			chmod 400 /root/.ssh/id_rsa"
    sh.privileged = true
  end

  #That might be instead of previous fixing lines, but is causes authentication failure.
  ##config.ssh.private_key_path = "#{ENV['HOME']}/.ssh/id_rsa"
  #config.ssh.private_key_path = "~/.ssh/id_rsa"
  #config.ssh.forward_agent = 'true'

  ###################################################################
  # Chef recipes                                                    #
  ###################################################################
  config.vm.provision :chef_solo do |chef|
  #	chef.log_level = :debug
    chef.cookbooks_path = "./cookbooks"
    chef.add_recipe "install_pkgs"
    chef.add_recipe "git_sync"
  end

  ###################################################################
  # Local deploy & test                                             #
  ###################################################################
  config.vm.provision "shell" do |sh|
    sh.inline = "cd /home/vagrant/geomongo
    			./scripts/local_deploy.sh
    			curl http://geomongo/instance/status"
    sh.privileged = true
  end
end
